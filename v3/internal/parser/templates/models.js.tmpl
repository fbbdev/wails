// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
{{$pkg := .Package}}
{{- $models := .ModelsFilename}}
{{- range .Imports}}
import * as {{.PackageName}} from "{{.Path}}/{{$models}}.js";
{{- end}}{{if .Imports}}
{{end}}
{{- range $enumindex, $enumdef := .Enums}}
/**
{{- if $enumdef.DocComment}}
 * {{jsdoc $enumdef.DocComment}}
{{- end}}
 * @readonly
 * @enum
 */
export const {{$enumdef.Name}} = {
    {{- range $constindex, $constdef := .Consts}}
    {{- if $constdef.DocComment}}{{if gt $constindex 0}}
{{end}}
    /**
     * {{jsdoc $constdef.DocComment}}
     */
    {{- end}}
    {{$constdef.Name}}: {{$constdef.Value}},{{end}}
};
{{end}}
{{- range $name, $def := .Models}}
{{- if $def.DocComment}}
/**
 * {{jsdoc $def.DocComment}}
 */
{{- end}}
export class {{$def.Name}} {
    /**
     * Creates a new {{$def.Name}} instance.
     * @param {Object} source - The source object to create the {{$def.Name}}.
    {{- range $def.Fields}}
     * @param { {{- .JSType $pkg -}} } [source.{{.JSName}}]
        {{- if or .DocComment (not .Exported)}} - {{end}}
        {{- if .DocComment}}{{paramdoc .DocComment}}{{end}}
        {{- if not .Exported}} (Warning: this is unexported in the Go struct.){{end}}
    {{- end}}
     */
    constructor(source = {}) {
        const { {{range $fieldindex, $field := $def.Fields}}
            {{- if gt $fieldindex 0}}, {{end}}
            {{- .JSName}} = {{.DefaultValue $pkg}}
        {{- end}} } = source;
        {{- range $def.Fields}}
        this.{{.JSName}} = {{.JSName}};
        {{- end}}
    }

    /**
     * Creates a new {{$def.Name}} instance from a string or object.
     * @param {string|object} source - The source data to create a {{$def.Name}} instance from.
     * @returns { {{- $def.Name -}} } A new {{$def.Name}} instance.
     */
    static createFrom(source) {
        let parsedSource = typeof source === 'string' ? JSON.parse(source) : source;
        return new {{$def.Name}}(parsedSource);
    }
};
{{end -}}
