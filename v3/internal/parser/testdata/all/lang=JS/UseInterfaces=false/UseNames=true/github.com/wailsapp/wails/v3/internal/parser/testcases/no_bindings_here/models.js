// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

import {Create as $Create} from "@wailsio/runtime";

import * as other$0 from "./other/models.js";

import * as $internal from "./internal.js";

/**
 * HowDifferent is a curious kind of person
 * that lets other people decide how they are different.
 */
export const HowDifferent = other$0.OtherPerson;

/**
 * HowDifferent is a curious kind of person
 * that lets other people decide how they are different.
 * @template How
 * @typedef {other$0.OtherPerson<{ [_: string]: How | null }>} HowDifferent
 */

/**
 * Impersonator gets their fields from other people.
 */
export const Impersonator = other$0.OtherPerson;

/**
 * Impersonator gets their fields from other people.
 * @typedef {other$0.OtherPerson<number>} Impersonator
 */

/**
 * Person is not a number.
 */
export class Person {
    /**
     * Creates a new Person instance.
     * @param {Partial<Person>} [$$source = {}] - The source object to create the Person.
     */
    constructor($$source = {}) {
        if (!("Name" in $$source)) {
            /**
             * They have a name.
             * @member
             * @type {string}
             */
            this["Name"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Person instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {Person}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Person(/** @type {Partial<Person>} */($$parsedSource));
    }
}

/**
 * PrivatePerson gets their fields from hidden sources.
 */
export const PrivatePerson = $internal.personImpl;

/**
 * PrivatePerson gets their fields from hidden sources.
 * @typedef {$internal.personImpl} PrivatePerson
 */
