// @ts-check
/**
{{- if .Group}}
{{- jsdoc .Group.Doc.Text ""}}
 *
{{- end}}
{{- if .Doc}}
{{- jsdoc .Doc.Text ""}}
 *
{{- end}}
 * Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
 * This file is automatically generated. DO NOT EDIT
 */

import {Call as $Call} from {{if .UseBundledRuntime}}"/wails/runtime.js"{{else}}"@wailsio/runtime"{{end}};
{{$models := .ModelsFile}}
{{- $internal := .InternalFile}}
{{- $useNames := .UseNames}}
{{- $imports := .Imports}}
{{- $collector := .Collector}}
{{- range $imports.External}}
import * as {{jsimport .}} from "{{.RelPath}}/{{$models}}";
{{- end}}{{if $imports.External}}
{{end}}
{{- if $imports.Models}}
{{- $typedefs := false}}
import {
    {{- $first := true}}
    {{- range $model, $class := $imports.Models}}
        {{- if $class}}
            {{- if $first}}, {{$first = false}}{{end}}
            {{- jsid $model}}
        {{- else}}
            {{- $typedefs = true}}
        {{- end}}
    {{- end -}}
} from "./{{$models}}";
{{- if $typedefs}}

{{range $model, $class := $imports.Models}}{{if not $class}}
/**
 * @typedef {import("./{{$models}}").{{jsid $model -}} } {{jsid $model}}
 */
{{- end}}{{end}}
{{- end}}
{{end}}
{{- if $imports.Internal}}
{{- $typedefs := false}}
import {
    {{- $first := true}}
    {{- range $model, $class := $imports.Internal}}
        {{- if $class}}
            {{- if $first}}, {{$first = false}}{{end}}
            {{- jsid $model}}
        {{- else}}
            {{- $typedefs = true}}
        {{- end}}
    {{- end -}}
} from "./{{$internal}}";
{{- if $typedefs}}

{{range $model, $class := $imports.Internal}}{{if not $class}}
/**
 * @typedef {import("./{{$internal}}").{{jsid $model -}} } {{jsid $model}}
 */
{{- end}}{{end}}
{{- end}}
{{end}}
{{- range .Methods}}
/**
{{- if .Doc}}
{{- jsdoc .Doc.Text ""}}
{{- end}}
{{- range $i, $param := .Params}}
 * @param { {{- jstype .Type $imports $collector -}} } {{jsparam $i .}}
{{- end}}
 * @returns {Promise<
    {{- if eq 0 (len .Results) -}}
        void
    {{- else if eq 1 (len .Results)}}
        {{- jstype (index .Results 0) $imports $collector}}
    {{- else -}}
        [{{range $i, $result := .Results}}
            {{- if gt $i 0}}, {{end}}
            {{- jstype .Type $imports $collector}}
        {{- end}}]
    {{- end}}>}
 */
export function {{.Name}}({{range $i, $param := .Params -}}
    {{- if gt $i 0}}, {{end}}
    {{- if .Variadic}}...{{end}}
    {{- jsparam $i .}}
{{- end}}) {
    {{if $useNames -}}
        return $Call.ByName("{{js .FQN}}"
    {{- else -}}
        return $Call.ByID({{.ID}}
    {{- end}}{{range $i, $param := .Params}}, {{jsparam $i .}}{{end}});
}
{{end -}}
