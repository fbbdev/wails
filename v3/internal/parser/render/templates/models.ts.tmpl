// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
{{$models := .ModelsFile}}
{{- $internal := .InternalFile}}
{{- $useInterfaces := .UseInterfaces}}
{{- $imports := .Imports}}
{{- $collector := .Collector}}
{{- range $imports.External}}
import * as {{jsimport .}} from "{{.RelPath}}/{{$models}}";
{{- end}}{{if $imports.External}}
{{end}}
{{- if $imports.Models}}
import {
    {{- $first := true}}
    {{- range $model, $class := $imports.Models}}
        {{- if not $first}}, {{end}}{{$first = false}}
        {{- if or $useInterfaces (not $class)}}type {{end}}{{jsid $model}}
    {{- end -}}
} from "./{{$models}}";
{{end}}
{{- if $imports.Internal}}
import {
    {{- $first := true}}
    {{- range $model, $class := $imports.Internal}}
        {{- if not $first}}, {{end}}{{$first = false}}
        {{- if or $useInterfaces (not $class)}}type {{end}}{{jsid $model}}
    {{- end -}}
} from "./{{$internal}}";
{{end}}
{{- range $model := .Models}}

{{- $isEnum := $model.Values}}
{{- $isClassAlias := and $model.Type (isclass $model.Type)}}
{{- $isTypeAlias := and $model.Type (not (isclass $model.Type))}}
{{- $isClassOrInterface := $model.Fields}}
{{- $isInterface := or $useInterfaces $model.Alias}}

{{- if $model.Doc}}
/**
{{- jsdoc $model.Doc.Text ""}}
 */
{{- end}}
{{- if $isEnum}}
export enum {{jsid $model.Name}} {
    {{- range $i, $group := $model.Values}}{{range $j, $sgroup := $group}}{{range $k, $value := $sgroup}}
    {{- if and (ne $i 0) (ne $j 0) (eq $k 0)}}
{{end}}
    {{- if or (and (eq $j 0) (eq $k 0) $value.Group.Group.Doc) (and (eq $k 0) $value.Group.Doc) $value.Doc}}
    {{- if or (gt $j 0) (gt $k 0)}}
{{end}}
    /**
    {{- if and (eq $j 0) (eq $k 0) $value.Group.Group.Doc}}
    {{- jsdoc $value.Group.Group.Doc.Text "    "}}{{if or (and (eq $k 0) $value.Group.Doc) $value.Doc}}
     *{{end}}
    {{- end}}
    {{- if and (eq $k 0) $value.Group.Doc}}
    {{- jsdoc $value.Group.Doc.Text "    "}}{{if $value.Doc}}
     *{{end}}
    {{- end}}
    {{- if $value.Doc}}
    {{- jsdoc $value.Doc.Text "    "}}
    {{- end}}
     */
    {{- end}}
    {{jsid $value.Name}} = {{jsvalue $value.Value}},
    {{- end}}{{end}}{{end}}
};
{{else if $isClassAlias}}
export const {{jsid $model.Name}} = {{jstype $model.Type $imports $collector}};
{{else if $isTypeAlias}}
type {{jsid $model.Name}} = {{jstype $model.Type $imports $collector}};
{{else if $isClassOrInterface}}
export {{if $isInterface}}interface{{else}}class{{end}} {{jsid $model.Name}} {
    {{- range $i, $group := $model.Fields}}{{range $j, $field := $group}}
    {{- if and (ne $i 0) (eq $j 0)}}
{{end}}
    {{- if or (and (eq $j 0) $field.Group.Doc) $field.Doc}}
    {{- if gt $j 0}}
{{end}}
    /**
    {{- if and (eq $j 0) $field.Group.Doc}}
    {{- jsdoc $field.Group.Doc.Text "    "}}{{if $field.Doc}}
     *{{end}}
    {{- end}}
    {{- if $field.Doc}}
    {{- jsdoc $field.Doc.Text "    "}}
    {{- end}}
     */
    {{- end}}
    "{{js $field.Name}}"{{if $field.Optional}}?{{end}}: {{jstype $field.Type $imports $collector}};
    {{- end}}{{end}}
{{- if not $isInterface}}

    /** Creates a new {{jsid $model.Name}} instance. */
    constructor(source: Partial<{{jsid $model.Name}}> = {}) {
    {{- range $group := $model.Fields}}{{range $i, $field := $group}}{{if not .Optional}}
        if (!("{{js $field.Name}}" in source)) {
            this["{{js $field.Name}}"] = {{jsdefault $field.Type $imports $collector $field.Quoted true}};
        }
    {{- end}}{{end}}{{end}}

        Object.assign(this, source);
    }

    /** Creates a new {{jsid $model.Name}} instance from a string or object. */
    static createFrom(source: string | object = {}): {{jsid $model.Name}} {
        let parsedSource = typeof source === 'string' ? JSON.parse(source) : source;
        {{- range $i, $group := $model.Fields}}{{range $j, $field := $group}}
        {{- $tgt := (printf "parsedSource[\"%s\"]" (js $field.Name))}}
        {{- jscreate
            (printf "\"%s\" in parsedSource" (js $field.Name))
            $tgt $tgt
            $field.Type $imports $collector
            $field.Quoted true "        "
        }}
        {{- end}}{{end}}
        return new this(parsedSource as Partial<{{jsid $model.Name}}>) as {{jsid $model.Name}};
    }
{{- end}}
}
{{end}}{{end -}}
